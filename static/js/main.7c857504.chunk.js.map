{"version":3,"sources":["components/GraphBuilder/GraphBuilder.module.css","hoc/Layout.module.css","components/SheetContainer/SheetContainer.module.css","components/Navbar/Navbar.js","components/SheetContainer/SheetContainer.js","hoc/Layout.js","components/GraphBuilder/TextEditor/TextEditor.js","components/GraphBuilder/Node/Node.js","hoc/withDraggable.js","components/GraphBuilder/GraphBuilder.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Navbar","SheetContainer","props","className","styles","container","children","Layout","layoutContainer","IndentList","DefaultElement","attributes","TextEditor","editor","useMemo","withReact","createEditor","useState","text","value","setValue","renderElement","useCallback","element","type","onChange","newValue","spellCheck","autoFocus","onKeyDown","event","key","shiftKey","preventDefault","Transforms","setNodes","match","n","Editor","isBlock","length","addNode","id","deleteNode","withDraggable","WrappedComponent","setPosition","axis","defaultPosition","x","y","grid","scale","onDrag","e","data","trackPos","style","cursor","Node","showChildren","setShowChildren","map","v","onClick","undefined","initialInput","nodes","GraphBuilder","input","setInput","parentNodes","filter","childNodes","individualNodes","parent","selectedIndex","duplicatedInput","i","newNode","Math","random","splice","newArr","button","exampleInput","list","child","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kHACAA,EAAOC,QAAU,CAAC,KAAO,2BAA2B,OAAS,+B,mBCA7DD,EAAOC,QAAU,CAAC,gBAAkB,kC,mBCApCD,EAAOC,QAAU,CAAC,UAAY,oC,g1YCSfC,EARA,kBACb,8BACE,2D,iBCGWC,EAJQ,SAACC,GAAD,OACrB,qBAAKC,UAAWC,IAAOC,UAAvB,SAAmCH,EAAMI,YCY5BC,EAXA,SAACL,GACd,OACE,qCACE,cAAC,EAAD,IACA,sBAAMC,UAAWC,IAAOI,gBAAxB,SACE,cAAC,EAAD,UAAiBN,EAAMI,iB,4CC0DzBG,EAAa,SAACP,GAClB,OACE,6BACE,6BAAKA,EAAMI,cAKXI,EAAiB,SAACR,GACtB,OAAO,6CAAOA,EAAMS,YAAb,aAA0BT,EAAMI,aAG1BM,EA5EI,SAACV,GAClB,IAAMW,EAASC,mBAAQ,kBAAMC,YAAUC,iBAAiB,IAD5B,EAEFC,mBAAS,CACjC,CACEX,SAAU,CAAC,CAAEY,KAAMhB,EAAMgB,UAJD,mBAErBC,EAFqB,KAEdC,EAFc,KAStBC,EAAgBC,uBAAY,SAACpB,GACjC,OAAQA,EAAMqB,QAAQC,MACpB,IAAK,MACH,OAAO,cAAC,EAAD,eAAgBtB,IACzB,QACE,OAAO,cAAC,EAAD,eAAoBA,OAE9B,IAEH,OACE,cAAC,IAAD,CACEW,OAAQA,EACRM,MAAOA,EACPM,SAAU,SAACC,GAAD,OAAcN,EAASM,IAHnC,SAKE,cAAC,IAAD,CACEL,cAAeA,EACfM,YAAU,EACVC,WAAS,EACTC,UAAW,SAACC,GACQ,QAAdA,EAAMC,KAAiBD,EAAME,UAC/BF,EAAMG,iBAENC,IAAWC,SACTtB,EACA,CAAEW,KAAM,aACR,CAAEY,MAAO,SAACC,GAAD,OAAOC,IAAOC,QAAQ1B,EAAQwB,OAElB,QAAdP,EAAMC,MACfD,EAAMG,iBAENC,IAAWC,SACTtB,EACA,CAAEW,KAAM,OACR,CAAEY,MAAO,SAACC,GAAD,OAAOC,IAAOC,QAAQ1B,EAAQwB,OAfvB,IAmBdnB,EAASC,EAAM,GAAGb,SAAS,GAA3BY,KACY,UAAdY,EAAMC,KAAmBb,EAAKsB,OAAS,GACzCV,EAAMG,iBACN/B,EAAMuC,QAAQvC,EAAMwC,KACG,UAAdZ,EAAMC,KACfD,EAAMG,iBAEU,cAAdH,EAAMC,KAAuC,IAAhBb,EAAKsB,SACpCV,EAAMG,iBACN/B,EAAMyC,WAAWzC,EAAMwC,W,iBCnBpBE,ECtCO,SAACC,GACrB,OAAO,SAAC3C,GAAW,IAAD,EACgBe,qBADhB,mBACC6B,GADD,WAQhB,OACE,cAAC,IAAD,CACEC,KAAK,IACLC,gBAAiB,CAAEC,EAAG,EAAGC,EAAG,GAC5BC,KAAM,CAAC,GAAI,IACXC,MAAO,EACPC,OAAQ,SAACC,EAAGC,GAAJ,OAVK,SAACA,GAChBT,EAAY,CAAEG,EAAGM,EAAKN,EAAGC,EAAGK,EAAKL,IASVM,CAASD,IALhC,SAOE,qBAAKE,MAAO,CAAEC,OAAQ,QAAtB,SACE,cAACb,EAAD,eAAsB3C,SDoBjB0C,EArCF,SAAPe,EAAQzD,GAAW,IAAD,EACkBe,oBAAS,GAD3B,mBACf2C,EADe,KACDC,EADC,KAUhBvD,EACJJ,EAAMI,UACNsD,GACA1D,EAAMI,SAASwD,KAAI,SAACC,GAAD,OACjB,cAACJ,EAAD,CAEEzC,KAAM6C,EAAE7C,KACRuB,QAASvC,EAAMuC,QACfE,WAAYzC,EAAMyC,WAClBD,GAAIqB,EAAErB,IAJDqB,EAAErB,OAQb,OACE,gCACE,oBAAIsB,QAtBmB,gBACFC,IAAnB/D,EAAMI,UACRuD,GAAiBD,IAoBjB,SACE,cAAC,EAAD,CACE1C,KAAMhB,EAAMgB,KACZwB,GAAIxC,EAAMwC,GACVD,QAASvC,EAAMuC,QACfE,WAAYzC,EAAMyC,eAGtB,6BAAKrC,U,iBE/BL4D,EAAe,CAAEC,MAAO,CAAC,CAAEzB,GAAI,EAAGxB,KAAM,MAoF/BkD,EAlFM,WAAM,MAECnD,mBAASiD,GAFV,mBAElBG,EAFkB,KAEXC,EAFW,KAIjBH,EAAUE,EAAVF,MAGJI,EAAcJ,EAAMK,QAAO,SAACT,GAAD,OAAsB,OAAfA,EAAEzD,YACpCmE,EAAaN,EAAMK,QAAO,SAACT,GAAD,OAAsB,OAAfA,EAAEzD,YACjCoE,EAAkBD,EAAWD,QAAO,SAACT,GAAD,OAAoB,OAAbA,EAAEY,UAE7ClC,EAAU,SAACV,GAKf,IAHA,IAEI6C,EAFAC,EAAe,YAAOV,GAGjBW,EAAE,EAAGA,EAAED,EAAgBrC,OAAQsC,IAClCD,EAAgBC,GAAGpC,KAAOX,IAC5B6C,EAAgBE,GAIpB,IAAIC,EAAU,CAAErC,GAAIsC,KAAKC,SAAU/D,KAAM,IACzC2D,EAAgBK,OAAON,EAAc,EAAG,EAAGG,GAE3CT,EAAS,CAAEH,MAAOU,KAGdlC,EAAa,SAACZ,GAElB,IAEIoD,EAFW,YAAOhB,GAEGK,QAAO,SAACT,GAAD,OAAOA,EAAErB,KAAOX,KAEhDuC,EAAS,CAAEH,MAAOgB,KAWpB,OACE,gCACE,wBAAQhF,UAAWC,IAAOgF,OAAQpB,QAVf,WACrBM,EAASe,IASP,8BAGA,wBAAQlF,UAAWC,IAAOgF,OAAQpB,QATxB,WACZM,EAASJ,IAQP,mBAGA,qBAAI/D,UAAWC,IAAOkF,KAAtB,UACGf,EAAYT,KAAI,SAACC,GAChB,OACE,cAAC,EAAD,CAEE7C,KAAM6C,EAAE7C,KACRZ,SAAUmE,EAAWD,QAAO,SAACe,GAAD,OAAWA,EAAMZ,SAAWZ,EAAErB,MAC1DD,QAASA,EACTE,WAAYA,EACZD,GAAIqB,EAAErB,IALDqB,EAAErB,OASZgC,EAAgBZ,KAAI,SAACC,GACpB,OACE,cAAC,EAAD,CAEE7C,KAAM6C,EAAE7C,KACRuB,QAASA,EACTE,WAAYA,EACZD,GAAIqB,EAAErB,IAJDqB,EAAErB,cCjEN8C,EARH,WACV,OACE,qBAAKrF,UAAU,MAAf,SACE,cAAC,EAAD,UAAQ,cAAC,EAAD,SCKCsF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7c857504.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"GraphBuilder_list__1pO2s\",\"button\":\"GraphBuilder_button__2lEHi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layoutContainer\":\"Layout_layoutContainer__1q5uD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SheetContainer_container__1aW-O\"};","import React from \"react\";\n\nconst Navbar = () => (\n  <div>\n    <ul>\n      Navbar | Graph Builder\n    </ul>\n  </div>\n);\n\nexport default Navbar;\n","import React from \"react\";\nimport styles from \"./SheetContainer.module.css\";\n\nconst SheetContainer = (props) => (\n  <div className={styles.container}>{props.children}</div>\n);\n\nexport default SheetContainer;\n","import React from \"react\";\nimport styles from \"./Layout.module.css\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport SheetContainer from \"../components/SheetContainer/SheetContainer\";\n\nconst Layout = (props) => {\n  return (\n    <>\n      <Navbar />\n      <main className={styles.layoutContainer}>\n        <SheetContainer>{props.children}</SheetContainer>\n      </main>\n    </>\n  );\n};\n\nexport default Layout;\n","import React, { useState, useMemo, useCallback } from \"react\";\nimport { createEditor, Editor, Transforms } from \"slate\";\nimport { Slate, Editable, withReact } from \"slate-react\";\n\nconst TextEditor = (props) => {\n  const editor = useMemo(() => withReact(createEditor()), []);\n  const [value, setValue] = useState([\n    {\n      children: [{ text: props.text }],\n    },\n  ]);\n\n  // switch between indented and non-indented\n  const renderElement = useCallback((props) => {\n    switch (props.element.type) {\n      case \"tab\":\n        return <IndentList {...props} />;\n      default:\n        return <DefaultElement {...props} />;\n    }\n  }, []);\n\n  return (\n    <Slate\n      editor={editor}\n      value={value}\n      onChange={(newValue) => setValue(newValue)}\n    >\n      <Editable\n        renderElement={renderElement}\n        spellCheck\n        autoFocus\n        onKeyDown={(event) => {\n          if (event.key === \"Tab\" && event.shiftKey) {\n            event.preventDefault();\n            // move up tab hierarchy\n            Transforms.setNodes(\n              editor,\n              { type: \"paragraph\" },\n              { match: (n) => Editor.isBlock(editor, n) }\n            );\n          } else if (event.key === \"Tab\") {\n            event.preventDefault();\n            // move down tab hierarchy\n            Transforms.setNodes(\n              editor,\n              { type: \"tab\" },\n              { match: (n) => Editor.isBlock(editor, n) }\n            );\n          }\n          // destructure text from state\n          let { text } = value[0].children[0];\n          if (event.key === \"Enter\" && text.length > 0) {\n            event.preventDefault();\n            props.addNode(props.id);\n          } else if (event.key === \"Enter\") {\n            event.preventDefault();\n          }\n          if (event.key === \"Backspace\" && text.length === 0) {\n            event.preventDefault();\n            props.deleteNode(props.id);\n          }\n        }}\n      />\n    </Slate>\n  );\n};\n\nconst IndentList = (props) => {\n  return (\n    <ul>\n      <li>{props.children}</li>\n    </ul>\n  );\n};\n\nconst DefaultElement = (props) => {\n  return <p {...props.attributes}>{props.children}</p>;\n};\n\nexport default TextEditor;\n","import React, { useState } from \"react\";\nimport TextEditor from \"../TextEditor/TextEditor\";\nimport withDraggable from \"../../../hoc/withDraggable\";\n\nconst Node = (props) => {\n  const [showChildren, setShowChildren] = useState(true);\n\n  const toggleChildrenView = () => {\n    if (props.children !== undefined) {\n      setShowChildren(!showChildren);\n    }\n  };\n\n  // if showChildren is true and props.children exists, render a child Node\n  const children =\n    props.children &&\n    showChildren &&\n    props.children.map((v) => (\n      <Node\n        key={v.id}\n        text={v.text}\n        addNode={props.addNode}\n        deleteNode={props.deleteNode}\n        id={v.id}\n      />\n    ));\n\n  return (\n    <div>\n      <li onClick={toggleChildrenView}>\n        <TextEditor\n          text={props.text}\n          id={props.id}\n          addNode={props.addNode}\n          deleteNode={props.deleteNode}\n        />\n      </li>\n      <ul>{children}</ul>\n    </div>\n  );\n};\nexport default withDraggable(Node);\n","import React, { useState } from \"react\";\nimport Draggable from \"react-draggable\";\n\nconst withDraggable = (WrappedComponent) => {\n  return (props) => {\n    const [position, setPosition] = useState();\n\n    // update our position whenever onDrag is triggered\n    const trackPos = (data) => {\n      setPosition({ x: data.x, y: data.y });\n    };\n\n    return (\n      <Draggable\n        axis=\"y\"\n        defaultPosition={{ x: 0, y: 0 }}\n        grid={[25, 25]}\n        scale={1}\n        onDrag={(e, data) => trackPos(data)}\n      >\n        <div style={{ cursor: \"move\" }}>\n          <WrappedComponent {...props} />\n        </div>\n      </Draggable>\n    );\n  };\n};\nexport default withDraggable;\n","import React, { useState } from \"react\";\nimport exampleInput from \"../../example_input.json\";\n\nimport Node from \"./Node/Node\";\nimport styles from \"./GraphBuilder.module.css\";\n\nconst initialInput = { nodes: [{ id: 1, text: \"\" }] };\n\nconst GraphBuilder = () => {\n  // set state default state to the provided example input\n  const [input, setInput] = useState(initialInput);\n  // destructure input nodes and concepts\n  const { nodes } = input;\n  // create arrays of parent nodes (without children), child nodes (with children),\n  // and individual nodes (w/o parents or children)\n  let parentNodes = nodes.filter((v) => v.children !== null);\n  let childNodes = nodes.filter((v) => v.children === null);\n  const individualNodes = childNodes.filter((v) => v.parent === null);\n\n  const addNode = (key) => {\n    // duplicate existing state\n    let duplicatedInput = [...nodes];\n    // find position of existing node\n    let selectedIndex\n    for (let i=0; i<duplicatedInput.length; i++) {\n      if (duplicatedInput[i].id === key){\n        selectedIndex = i\n      }\n    }\n    // create new node\n    let newNode = { id: Math.random(), text: \"\" }\n    duplicatedInput.splice(selectedIndex+1, 0, newNode)\n    // set new state\n    setInput({ nodes: duplicatedInput });\n  };\n\n  const deleteNode = (key) => {\n    // duplicate existing state\n    let copiedInput = [...nodes];\n    // delete select node\n    let newArr = copiedInput.filter((v) => v.id !== key);\n    // set new state\n    setInput({ nodes: newArr });\n  };\n\n  const importMockData = () => {\n    setInput(exampleInput);\n  };\n\n  const clear = () => {\n    setInput(initialInput);\n  };\n\n  return (\n    <div>\n      <button className={styles.button} onClick={importMockData}>\n        Import mock data\n      </button>\n      <button className={styles.button} onClick={clear}>\n        Clear\n      </button>\n      <ul className={styles.list}>\n        {parentNodes.map((v) => {\n          return (\n            <Node\n              key={v.id}\n              text={v.text}\n              children={childNodes.filter((child) => child.parent === v.id)}\n              addNode={addNode}\n              deleteNode={deleteNode}\n              id={v.id}\n            />\n          );\n        })}\n        {individualNodes.map((v) => {\n          return (\n            <Node\n              key={v.id}\n              text={v.text}\n              addNode={addNode}\n              deleteNode={deleteNode}\n              id={v.id}\n            />\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default GraphBuilder;\n","import \"./App.css\";\nimport Layout from \"./hoc/Layout\";\nimport GraphBuilder from './components/GraphBuilder/GraphBuilder'\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Layout><GraphBuilder/></Layout>\n    </div>\n  );\n};\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}